services:
  postgres:
   image: postgres
   environment:
     - POSTGRES_PASSWORD=Admin
   ports:
     - 5432:5432
   volumes:
     - pgdata:/var/lib/postgresql/data
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - 27017:27017
    volumes:
      - mongodata:/var/lib/mongodb/data
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    expose:
      - 9200
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=Admin123*
    networks:
      - es-net
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.1
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    expose:
      - 5601
    networks:
      - es-net
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    volumes:
      - kibana-data:/usr/share/kibana/data
  redis:
    image: redis:6.0.7
    container_name: redis
    restart: always
    volumes:
      - redis_valume_data:/data
    ports:
      - 6379:6379
  mssql:
    image: mcr.microsoft.com/mssql/server
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Str0ngPass!123
    restart: always
    ports:
      - "1433:1433"
  identity-svc:
    image: mymicroservice/identity-svc:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=Admin;Database=Microservices_GSteam_Users
    depends_on:
      - postgres
    ports:
      - 5001:80
  order-svc:
    image: mymicroservice/order-svc:latest
    build:
      context: .
      dockerfile: src/OrderService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - AuthorirtyServiceUrl=http://identity-svc
      - ConnectionStrings__DefaultConnection=Server=mssql,1433;Database=Micorderservice_OrderDb;User Id=sa;Password=Str0ngPass!123;TrustServerCertificate=true
      - RabbitMq__Host=rabbitmq
    depends_on:
      - mssql
      - rabbitmq
    ports:
      - 8004:80
  gateway-svc:
    image: mymicroservice/gateway-svc:latest
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 6001:80
  game-svc:
    image: mymicroservice/game-svc:latest
    build:
      context: .
      dockerfile: src/GameService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:9999
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=Admin;Database=Microservices_GSteam
      - AuthorirtyServiceUrl=http://identity-svc
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:9999
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=http://+:80
    ports:
      - 8003:80
      - 9999:9999
    depends_on:
      - postgres
      - rabbitmq
  discount-svc:
    image: mymicroservice/discount-svc:latest
    build:
      context: .
      dockerfile: src/DiscountService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:8888
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=Admin;Database=Microservices_GSteam_Discount
      - AuthorirtyServiceUrl=http://identity-svc
      - GrpcGame=http://game-svc:9999
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:8888
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=http://+:80
    ports:
      - 8000:80
      - 8888:8888
    depends_on:
      - postgres
  basket-svc:
    image: mymicroservice/basket-svc:latest
    build:
      context: .
      dockerfile: src/BasketService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RedisDatabase=redis
      - RabbitMq__Host=rabbitmq
      - AuthorirtyServiceUrl=http://identity-svc
      - GrpcDiscount=http://discount-svc:8888
    ports:
      - 8001:80
    depends_on:
      - postgres
      - redis
      - rabbitmq
  search-svc:
    image: mymicroservice/search-svc:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb:27017/?authSource=admin
      - RabbitMq__Host=rabbitmq
    ports:
      - 8005:80
    depends_on:
      - mongodb
      - rabbitmq 
  filter-svc:
    image: mymicroservice/filter-svc:latest
    build:
      context: .
      dockerfile: src/FilterService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - Elastic__Url=http://elasticsearch:9200
      - ELASTIC_Username=elastic
      - ELASTIC_Password=Admin123*
      - indexName=filter_game
      - RabbitMq__Host=rabbitmq
    ports:
      - 8002:80
    depends_on:
      - elasticsearch
      - rabbitmq 
networks:
  es-net:
    driver: bridge
volumes:
  pgdata:
  mongodata:
  elasticsearch-data:
  kibana-data:
  redis_valume_data:
   